<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>【蓝色蜻蛉】示例文档.md</title>
      <link href="/2024/02/02/%E3%80%90%E8%93%9D%E8%89%B2%E8%9C%BB%E8%9B%89%E3%80%91%E7%A4%BA%E4%BE%8B%E6%96%87%E6%A1%A3/"/>
      <url>/2024/02/02/%E3%80%90%E8%93%9D%E8%89%B2%E8%9C%BB%E8%9B%89%E3%80%91%E7%A4%BA%E4%BE%8B%E6%96%87%E6%A1%A3/</url>
      
        <content type="html"><![CDATA[<h1 id="ql-boot-template"><a href="#ql-boot-template" class="headerlink" title="ql-boot-template"></a>ql-boot-template</h1><blockquote><p>失手扑空蓝色的蜻蛉</p><p>Author: <a href="https://github.com/chocohQL">chocohQL</a></p><p>GitHub: <a href="https://github.com/chocohQL/ql-boot-template">https://github.com/chocohQL/ql-boot-template</a></p></blockquote><h2 id="项目介绍"><a href="#项目介绍" class="headerlink" title="项目介绍"></a>项目介绍</h2><p>ql-boot-template 是一个多模块SpringBoot模板项目，已配置好基本框架和通用代码，用于快速搭建一个中小型的后端项目。</p><ul><li>后端项目基于 SpirngBoot + SpringSecuity 搭建</li><li>内置自定义 spring-boot-starter 模板</li></ul><h2 id="相关项目"><a href="#相关项目" class="headerlink" title="相关项目"></a>相关项目</h2><ul><li>前端配套测试项目：<a href="https://github.com/chocohQL/ql-vue-template">ql-vue-template</a></li><li>SpringBoot极简模板项目（ql-boot-template青春版）：<a href="https://github.com/chocohQL/ql-boot-simple">ql-boot-simple</a></li></ul><h2 id="技术选型"><a href="#技术选型" class="headerlink" title="技术选型"></a>技术选型</h2><ul><li>JDK 8</li><li>SpringBoot</li><li>SpringSecurity</li><li>MyBatisPlus</li><li>MySQL</li><li>Redis</li></ul><h2 id="项目架构"><a href="#项目架构" class="headerlink" title="项目架构"></a>项目架构</h2><p><img src="https://fastly.jsdelivr.net/gh/chocohQL/ql-file@main/assets/github/ql-boot-template-%E6%9E%B6%E6%9E%84.svg"></p><p>项目主要分为4个模块:</p><ul><li>**核心框架(ql-framework)**：主要用于编写核心业务、全局配置、异常处理等。</li><li>**数据访模块(ql-dal)**：用于定义实体类和数据库映射。</li><li>**安全模块(ql-security)**：用于编写安全相关的代码，如安全配置、认证授权逻辑等。</li><li>**通用模块(ql-common)**：用于编写通用工具类、常量类、异常类等。</li><li>**starter模板(ql-spring-boot)**：简易的spring-boot-starter模板。</li></ul><h2 id="项目结构"><a href="#项目结构" class="headerlink" title="项目结构"></a>项目结构</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">ql-boot-template  </span><br><span class="line">├── ql-common                           // 通用模块</span><br><span class="line">│       └── annotation                      // 注解</span><br><span class="line">│       └── constant                        // 常量</span><br><span class="line">│       └── exception                       // 异常类</span><br><span class="line">│       └── model                           // 数据模型</span><br><span class="line">│       └── utils                           // 工具类</span><br><span class="line">├── ql-framework                        // 核心模块</span><br><span class="line">│       └── ascept                          // 切面</span><br><span class="line">│       └── config                          // 全局配置</span><br><span class="line">│       └── controller                      // 控制层</span><br><span class="line">│       └── exception                       // 异常处理</span><br><span class="line">│       └── service                         // 业务层</span><br><span class="line">├── ql-security                         // 安全模块</span><br><span class="line">│       └── filter                          // 过滤器</span><br><span class="line">│       └── handler                         // 处理器</span><br><span class="line">│       └── service                         // 认证业务</span><br><span class="line">├── ql-security                         // 安全模块</span><br><span class="line">│       └── config                          // 配置</span><br><span class="line">│       └── filter                          // 过滤器</span><br><span class="line">│       └── handler                         // 处理器</span><br><span class="line">│       └── service                         // 认证业务</span><br><span class="line">├── ql-dal                              // 数据持久层</span><br><span class="line">│       └── domain                          // 数据层</span><br><span class="line">│       └── mapper                          // 持久层</span><br><span class="line">├── ql-spring-boot                      // spring-boot-starter模板</span><br><span class="line">│       └── ql-spring-boot-autoconfigure    // starter自动配置</span><br><span class="line">│       └── ql-spring-boot-starter          // starter入口</span><br></pre></td></tr></table></figure><h2 id="快速开始"><a href="#快速开始" class="headerlink" title="快速开始"></a>快速开始</h2><ol><li>创建数据库表</li></ol><p><code>sql/ql_boot_template.sql</code></p><p>创建数据库执行sql文件，仅生成一个 user 表，对应 User 类，可按需扩充字段。</p><ol start="2"><li>修改application.yml文件</li></ol><p><code>ql-framework/src/main/resources/application.yml</code></p><p>修改 MySQL 和 Redis 连接配置</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:mysql://localhost:3306/ql_boot_template?serverTimezone=UTC&amp;useUnicode=true&amp;characterEncoding=utf8&amp;useSSL=false</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">yourPassword</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">com.zaxxer.hikari.HikariDataSource</span></span><br><span class="line">    <span class="attr">driver-class-name:</span> <span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">redis:</span></span><br><span class="line">    <span class="attr">host:</span> <span class="string">localhost</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">6379</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">yourPassword</span></span><br></pre></td></tr></table></figure><ol start="3"><li>测试启动</li></ol><p>启动前后端项目，默认实现了登录和退出登录接口。（sql中生成的测试用户 -&gt; 用户名:chocoh，密码:123123）</p><p>前端测试项目：<a href="https://github.com/chocohQL/ql-vue-template">ql-vue-template</a></p><h2 id="了解更多"><a href="#了解更多" class="headerlink" title="了解更多"></a>了解更多</h2><h3 id="授权认证"><a href="#授权认证" class="headerlink" title="授权认证"></a>授权认证</h3><p>使用SpringSecurity授权认证流程</p><p><img src="https://fastly.jsdelivr.net/gh/chocohQL/ql-file@main/assets/github/ql-security.svg"></p><p>ql-security 模块对 SpringSecurity 进行了封装，在 SecurityConfig 中同一配置：</p><ul><li>TokenService 中封装了对jwt的操作和在Redis保存用户信息的逻辑，可在此集中修改封装基于token的一系列逻辑。</li><li>UserDetailsServiceImpl 中实现了登录查询用户信息的逻辑。AuthenticationService 中定义了用户密码的校验逻辑，可在次基础上进一步修改角色管理逻辑。</li><li>handler 包主要定义了一些处理逻辑，如退出登录、认证失败等。</li></ul><h3 id="客户端"><a href="#客户端" class="headerlink" title="客户端"></a>客户端</h3><h3 id="修改客户端配置"><a href="#修改客户端配置" class="headerlink" title="修改客户端配置"></a>修改客户端配置</h3><p>项目提供了多种现成客户端、工具：</p><ul><li>EmailClient：用于邮箱发送</li><li>OssClient：用于阿里云OSS对象存储</li><li>RedisService：对RedisTemplate常用操作的封装</li></ul><p>配置使用客户端：</p><ol><li>修改配置文件</li></ol><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">email:</span></span><br><span class="line">  <span class="attr">host:</span> <span class="string">smtp.qq.com</span></span><br><span class="line">  <span class="attr">from:</span> <span class="string">change@qq.com</span></span><br><span class="line">  <span class="attr">password:</span> <span class="string">change</span></span><br><span class="line">  <span class="attr">username:</span> <span class="string">change@qq.com</span></span><br><span class="line"></span><br><span class="line"><span class="attr">oss:</span></span><br><span class="line">  <span class="attr">endpoint:</span> <span class="string">change</span></span><br><span class="line">  <span class="attr">url:</span> <span class="string">change</span></span><br><span class="line">  <span class="attr">bucket-name:</span> <span class="string">chocoh</span></span><br><span class="line">  <span class="attr">access-key-id:</span> <span class="string">change</span></span><br><span class="line">  <span class="attr">access-key-secret:</span> <span class="string">change</span></span><br><span class="line">  <span class="attr">file-dir:</span> <span class="string">ql/avatar/</span></span><br></pre></td></tr></table></figure><ol start="2"><li>注册客户端为bean</li></ol><p><code>ql-framework/src/main/java/com/chocoh/ql/framework/config/ClientConfig.java</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ClientConfig</span> &#123;</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> EmailClient <span class="title function_">emailClient</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">EmailClient</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> OssClient <span class="title function_">ossClient</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">OssClient</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="超级响应类"><a href="#超级响应类" class="headerlink" title="超级响应类"></a>超级响应类</h3><p><code>com.chocoh.ql.common.model.Response</code></p><ul><li>类名调用直接响应基本的 {msg, code, data} 结构。</li><li>继承 HashMap ，内置了 DataMap 内部类，方便链式调用生成各种复杂的响应结构。</li></ul><h4 id="常用结构"><a href="#常用结构" class="headerlink" title="常用结构"></a>常用结构</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> Response.success(<span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;());</span><br></pre></td></tr></table></figure><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;msg&quot;</span><span class="punctuation">:</span><span class="string">&quot;操作成功&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span><span class="number">200</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;data&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h4 id="通过链式调用实现各种复杂结构"><a href="#通过链式调用实现各种复杂结构" class="headerlink" title="通过链式调用实现各种复杂结构"></a>通过链式调用实现各种复杂结构</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Response</span> <span class="variable">response</span> <span class="operator">=</span> Response.dataMap()</span><br><span class="line">        .put(<span class="string">&quot;1&quot;</span>, <span class="string">&quot;参数一&quot;</span>)</span><br><span class="line">        .put(<span class="string">&quot;2&quot;</span>, <span class="string">&quot;参数二&quot;</span>)</span><br><span class="line">        .getMap(<span class="string">&quot;3&quot;</span>)</span><br><span class="line">        .put(<span class="string">&quot;3.1&quot;</span>, System.currentTimeMillis())</span><br><span class="line">        .put(<span class="string">&quot;3.2&quot;</span>, <span class="keyword">new</span> <span class="title class_">Random</span>().nextInt(<span class="number">8</span>))</span><br><span class="line">        .getMap(<span class="string">&quot;3.3&quot;</span>)</span><br><span class="line">        .put(<span class="string">&quot;4.1&quot;</span>, Constants.HEADER_TOKEN)</span><br><span class="line">        .put(<span class="string">&quot;4.2&quot;</span>, <span class="keyword">new</span> <span class="title class_">User</span>(<span class="number">1L</span>, <span class="string">&quot;chocoh&quot;</span>, <span class="string">&quot;123123&quot;</span>, <span class="string">&quot;admin&quot;</span>))</span><br><span class="line">        .put(<span class="string">&quot;4.3&quot;</span>, <span class="keyword">new</span> <span class="title class_">Response</span>.DataMap().put(<span class="string">&quot;5.1&quot;</span>, <span class="literal">true</span>).put(<span class="string">&quot;5.2&quot;</span>, <span class="string">&quot;&quot;</span>))</span><br><span class="line">        .ok()</span><br><span class="line">        .put(<span class="string">&quot;其他外层参数&quot;</span>, <span class="string">&quot;...&quot;</span>);</span><br><span class="line">QlApplicationTest.printJson(response);</span><br></pre></td></tr></table></figure><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;msg&quot;</span><span class="punctuation">:</span><span class="string">&quot;操作成功&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;其他外层参数&quot;</span><span class="punctuation">:</span><span class="string">&quot;...&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span><span class="number">200</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;data&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;1&quot;</span><span class="punctuation">:</span><span class="string">&quot;参数一&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;2&quot;</span><span class="punctuation">:</span><span class="string">&quot;参数二&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;3&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;3.1&quot;</span><span class="punctuation">:</span><span class="number">1703938143220</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;3.2&quot;</span><span class="punctuation">:</span><span class="number">5</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;3.3&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;4.1&quot;</span><span class="punctuation">:</span><span class="string">&quot;Authorization&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;4.2&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;password&quot;</span><span class="punctuation">:</span><span class="string">&quot;123123&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;role&quot;</span><span class="punctuation">:</span><span class="string">&quot;admin&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span><span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;username&quot;</span><span class="punctuation">:</span><span class="string">&quot;chocoh&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;4.3&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;5.1&quot;</span><span class="punctuation">:</span><span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;5.2&quot;</span><span class="punctuation">:</span><span class="string">&quot;&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h4 id="其他结构"><a href="#其他结构" class="headerlink" title="其他结构"></a>其他结构</h4><p>如果不想使用 {msg, code, data} 结构，可以直接使用无参构造创建一个空 Response 对象，通过链式调用定制内容。</p>]]></content>
      
      
      <categories>
          
          <category> 文档 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> SpringBoot </tag>
            
            <tag> SpringSecurity </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2024/02/01/hello-world/"/>
      <url>/2024/02/01/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      <categories>
          
          <category> 文档 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
